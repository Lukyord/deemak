---
import Layout from "@/layouts/Layout.astro";
import PortableTextBody from "@/components/ui/PortableTextBody.astro";
import { myPortableTextComponents } from "@/components/ui/PortableTextComponents";

import { getServices } from "@/services/service";
import {
  getJournalCategories,
  getJournals,
  getJournalAuthors,
} from "@/services/journal";
import { urlFor } from "@/lib/sanity";

import type {
  Journal,
  JournalAuthor,
  JournalCategory,
  Service,
} from "~/sanity/sanity.types";

const services: Service[] = await getServices();
const categories: JournalCategory[] = await getJournalCategories();
const journals = await getJournals();
const authors: JournalAuthor[] = await getJournalAuthors();
---

<Layout title="Sanity Test">
  <main>
    <h1>Sanity Test</h1>

    <!-- journals -->
    <hr />
    <h2>Journal Categories</h2>
    <ul>
      {
        categories.map((category) => (
          <li>
            <h2>{category.title}</h2>
            <p>{category.description}</p>
          </li>
        ))
      }
    </ul>

    <h2>Journals</h2>
    <ul>
      {
        journals.map((journal) => (
          <li>
            <h2>{journal.title}</h2>
            <p>{journal.publishedAt}</p>
            {journal.author && <p>Author: {journal.author.name}</p>}{" "}
            <PortableTextBody
              body={journal.body}
              components={myPortableTextComponents}
            />
          </li>
        ))
      }
    </ul>

    <h2>Journal Authors</h2>
    <ul>
      {
        authors.map((author) => (
          <li>
            <h2>{author.name}</h2>
            {author.image?.asset && (
              <img
                src={urlFor(author.image.asset._ref).width(200).url()}
                alt={author.name}
              />
            )}
            {/* {author.bio && (
                <p>
                  {author.bio
                    .map((block) =>
                      block.children.map((child) => child.text).join(" "),
                    )
                    .join(" ")}
                </p>
              )} */}
          </li>
        ))
      }
    </ul>

    <!-- services -->
    <hr />
    <ul>
      {
        services.map((service) => (
          <li>
            <h2>{service.title}</h2>
            {service.slug && <p>Slug: {service.slug.current}</p>}{" "}
            {service.mainImage && service.mainImage.asset && (
              <img
                src={urlFor(service.mainImage.asset._ref).width(200).url()}
                alt={service.title}
                loading="lazy"
              />
            )}
            <h3>Description 1</h3>
            <p>{service.description1}</p>
            {service.description2 && (
              <>
                <h3>Description 2</h3>
                <p>{service.description2}</p>
              </>
            )}
            <h3>Highlight</h3>
            <p>{service.highlight}</p>
            <h3>Pricing Options</h3>
            <ul>
              {service.pricingOptions &&
                service.pricingOptions.map((option) => (
                  <li>
                    {option.time}{" "}
                    {option.timeUnit
                      ? option.timeUnit.charAt(0).toUpperCase() +
                        option.timeUnit.slice(1)
                      : "Unknown"}{" "}
                    - Â£{option.price}
                  </li>
                ))}
            </ul>
            {service.expectationImage && service.expectationImage.asset && (
              <img
                src={urlFor(service.expectationImage.asset._ref)
                  .width(200)
                  .url()}
                alt={`Expectation for ${service.title}`}
                loading="lazy"
              />
            )}
            <h3>Expectation</h3>
            <p>{service.expectation}</p>
            <h3>Benefits</h3>
            <ul>
              {service.benefits &&
                service.benefits.map((benefit) => <li>{benefit}</li>)}
            </ul>
          </li>
        ))
      }
    </ul>
  </main>
</Layout>

<style></style>
